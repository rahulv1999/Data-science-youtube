{
    "UCbXgNpp0jedKWcQiULLbDTA": {
        "channel_statistics": {
            "viewCount": "82047",
            "commentCount": "0",
            "subscriberCount": "2200",
            "hiddenSubscriberCount": false,
            "videoCount": "61"
        },
        "video_data": {
            "VJW9wU-1n18": {
                "publishedAt": "2020-03-30T15:59:25.000Z",
                "title": "PyTorch Tutorial 16 - How To Use The TensorBoard",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn about the TensorBoard and how we can use it to visualize and analyze our models. TensorBoard is a visualization toolkit that provides the visualization and tooling needed for machine learning experimentation:\n\nWe will learn:\n- How to install and use the TensorBoard in Pytorch\n- How to add images\n- How to add a model graph\n- How to visualize loss and accuracy during training\n- How to plot precision-recall curves\n\nPart 16: How To Use The TensorBoard\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nFurther Readings:\nhttps://www.tensorflow.org/tensorboard\nhttps://pytorch.org/docs/stable/tensorboard.html\nhttps://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/VJW9wU-1n18/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/VJW9wU-1n18/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/VJW9wU-1n18/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/VJW9wU-1n18/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/VJW9wU-1n18/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 16 - How To Use The TensorBoard",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn about the TensorBoard and how we can use it to visualize and analyze our models. TensorBoard is a visualization toolkit that provides the visualization and tooling needed for machine learning experimentation:\n\nWe will learn:\n- How to install and use the TensorBoard in Pytorch\n- How to add images\n- How to add a model graph\n- How to visualize loss and accuracy during training\n- How to plot precision-recall curves\n\nPart 16: How To Use The TensorBoard\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nFurther Readings:\nhttps://www.tensorflow.org/tensorboard\nhttps://pytorch.org/docs/stable/tensorboard.html\nhttps://machinelearningmastery.com/roc-curves-and-precision-recall-curves-for-classification-in-python/\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "309",
                "likeCount": "18",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT25M41S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "dYvt3vSJaQA": {
                "publishedAt": "2020-03-23T14:32:45.000Z",
                "title": "Complete FREE Study Guide for Machine Learning and Deep Learning",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "A complete study plan to become a Machine Learning Engineer with links to all FREE resources. If you finish the list you will be equipped with enough theoretical and practical experience to get started in the industry! I tried to limit the resources to a minimum, but some courses are extensive.\n\nFind the Complete List here:\nhttps://github.com/python-engineer/ml-study-plan\n\nI divided the plan into these categories:\n0. Prerequisites\n1. Machine Learning\n2. Deep Learning\n3. Own Projects and Kaggle Competitions\n4. Interview Preparation\n5. Next Level Pro Tips\n\nThis plan is not sponsored by anyone on the list! \n\nIf you enjoyed this video, please subscribe to the channel!\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\nIcon made by Eucalyp from www.flaticon.com\n\n#MachineLearning #DeepLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/dYvt3vSJaQA/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/dYvt3vSJaQA/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/dYvt3vSJaQA/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/dYvt3vSJaQA/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/dYvt3vSJaQA/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Complete FREE Study Guide for Machine Learning and Deep Learning",
                    "description": "A complete study plan to become a Machine Learning Engineer with links to all FREE resources. If you finish the list you will be equipped with enough theoretical and practical experience to get started in the industry! I tried to limit the resources to a minimum, but some courses are extensive.\n\nFind the Complete List here:\nhttps://github.com/python-engineer/ml-study-plan\n\nI divided the plan into these categories:\n0. Prerequisites\n1. Machine Learning\n2. Deep Learning\n3. Own Projects and Kaggle Competitions\n4. Interview Preparation\n5. Next Level Pro Tips\n\nThis plan is not sponsored by anyone on the list! \n\nIf you enjoyed this video, please subscribe to the channel!\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\nIcon made by Eucalyp from www.flaticon.com\n\n#MachineLearning #DeepLearning"
                },
                "viewCount": "424",
                "likeCount": "31",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "8",
                "duration": "PT12M21S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "wF5t4Mmv5us": {
                "publishedAt": "2020-03-16T20:04:26.000Z",
                "title": "AdaBoost in Python - Machine Learning From Scratch 13 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the AdaBoost algorithm using only built-in Python modules and numpy. AdaBoost is an ensemble technique that attempts to create a strong classifier from a number of weak classifiers. We will first learn about the concept and the math behind this popular ML algorithm, and then we jump to the code.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/understanding-adaboost-2f94f22d5bfe\nhttps://machinelearningmastery.com/boosting-and-adaboost-for-machine-learning/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/wF5t4Mmv5us/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/wF5t4Mmv5us/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/wF5t4Mmv5us/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/wF5t4Mmv5us/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/wF5t4Mmv5us/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "AdaBoost in Python - Machine Learning From Scratch 13 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the AdaBoost algorithm using only built-in Python modules and numpy. AdaBoost is an ensemble technique that attempts to create a strong classifier from a number of weak classifiers. We will first learn about the concept and the math behind this popular ML algorithm, and then we jump to the code.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/understanding-adaboost-2f94f22d5bfe\nhttps://machinelearningmastery.com/boosting-and-adaboost-for-machine-learning/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "470",
                "likeCount": "17",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "1",
                "duration": "PT27M35S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "XqYpE6jqdww": {
                "publishedAt": "2020-03-09T16:54:04.000Z",
                "title": "YouTube Data API Tutorial with Python - Analyze the Data - Part 4",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/XqYpE6jqdww/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/XqYpE6jqdww/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/XqYpE6jqdww/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/XqYpE6jqdww/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/XqYpE6jqdww/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "YouTube Data API Tutorial with Python - Analyze the Data - Part 4",
                    "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "106",
                "likeCount": "4",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT22M11S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "itiRd7iZ2_M": {
                "publishedAt": "2020-03-08T13:00:14.000Z",
                "title": "YouTube Data API Tutorial with Python - Get Video Statistics - Part 3",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/itiRd7iZ2_M/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/itiRd7iZ2_M/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/itiRd7iZ2_M/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/itiRd7iZ2_M/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/itiRd7iZ2_M/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "YouTube Data API Tutorial with Python - Get Video Statistics - Part 3",
                    "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "84",
                "likeCount": "4",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "0",
                "duration": "PT17M18S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "4FwXqOT4-FM": {
                "publishedAt": "2020-03-07T13:27:31.000Z",
                "title": "YouTube Data API Tutorial with Python - Find Channel Videos - Part 2",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics \n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/4FwXqOT4-FM/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/4FwXqOT4-FM/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/4FwXqOT4-FM/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/4FwXqOT4-FM/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/4FwXqOT4-FM/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "YouTube Data API Tutorial with Python - Find Channel Videos - Part 2",
                    "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics \n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "110",
                "likeCount": "4",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT24M15S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "5qtC-tsQ-wE": {
                "publishedAt": "2020-02-23T11:59:11.000Z",
                "title": "YouTube Data API Tutorial with Python - Analyze Channel Statistics - Part 1",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/5qtC-tsQ-wE/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/5qtC-tsQ-wE/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/5qtC-tsQ-wE/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/5qtC-tsQ-wE/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/5qtC-tsQ-wE/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "YouTube Data API Tutorial with Python - Analyze Channel Statistics - Part 1",
                    "description": "In this Python Tutorial we will be learning how to work with the YouTube Data API and analyze channel statistics. This is going to be a 4 part series:\n\n- Part 1: Setup your app and get API Key, and extract basic channel statistics\n- Part 2: Get a list of all the videos of a channel\n- Part 3: Get in depth statistics for each video\n- Part 4: Analyze the data in a jupyter notebook\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/youtube-analyzer\n\nMore:\n- Official guides and docs: https://developers.google.com/youtube/v3\n- Register app: https://console.developers.google.com/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "294",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT20M42S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "K0lWSB2QoIQ": {
                "publishedAt": "2020-02-12T17:57:47.000Z",
                "title": "PyTorch Tutorial 15 - Transfer Learning",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn about transfer learning and how this can be implemented in PyTorch.\n\nWe will learn:\n- What is Transfer Learning\n- Use the pretrained ResNet-18 model\n- Apply transfer learning to classify ants and bees\n- Exchange the last fully connected layer\n- Try 2 methods: Finetune the whole network or train only the last layer\n- Evaluate the results\n\nPart 15: Transfer Learning\n\nYou can download the dataset here:\nhttps://download.pytorch.org/tutorial/hymenoptera_data.zip\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nMore about Transfer Learning:\nhttps://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/K0lWSB2QoIQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/K0lWSB2QoIQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/K0lWSB2QoIQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/K0lWSB2QoIQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/K0lWSB2QoIQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 15 - Transfer Learning",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn about transfer learning and how this can be implemented in PyTorch.\n\nWe will learn:\n- What is Transfer Learning\n- Use the pretrained ResNet-18 model\n- Apply transfer learning to classify ants and bees\n- Exchange the last fully connected layer\n- Try 2 methods: Finetune the whole network or train only the last layer\n- Evaluate the results\n\nPart 15: Transfer Learning\n\nYou can download the dataset here:\nhttps://download.pytorch.org/tutorial/hymenoptera_data.zip\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nMore about Transfer Learning:\nhttps://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "870",
                "likeCount": "30",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "15",
                "duration": "PT14M55S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "Q8oRicpUeuw": {
                "publishedAt": "2020-02-09T16:07:56.000Z",
                "title": "The Walrus Operator - New in Python 3.8 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial I show you the new assignment expression also known as the walrus operator. This Python feature is new in Python 3.8. It can be used to evaluate an expression and simultaneously assign it to a variable. This can be useful to simplify the code in some cases. I will show you the syntax of the walrus operator and two useful examples.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/Q8oRicpUeuw/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/Q8oRicpUeuw/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/Q8oRicpUeuw/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/Q8oRicpUeuw/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/Q8oRicpUeuw/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "The Walrus Operator - New in Python 3.8 - Python Tutorial",
                    "description": "In this Python Tutorial I show you the new assignment expression also known as the walrus operator. This Python feature is new in Python 3.8. It can be used to evaluate an expression and simultaneously assign it to a variable. This can be useful to simplify the code in some cases. I will show you the syntax of the walrus operator and two useful examples.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "206",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT8M18S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "pDdP0TFzsoQ": {
                "publishedAt": "2020-02-07T15:32:59.000Z",
                "title": "PyTorch Tutorial 14 - Convolutional Neural Network (CNN)",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will implement our first convolutional neural network (CNN) that can do image classification based on the famous CIFAR-10 dataset.\n\nWe will learn:\n- Architecture of CNNs\n- Convolutional Filter\n- Max Pooling\n- Determine the correct layer size\n- Implement the CNN architecture in PyTorch\n\nPart 14: Convolutional Neural Network (CNN)\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nMore about CNNs:\ndeeplizard channel: https://youtu.be/YRhxdVk_sIs\nStanford Lecture: https://youtu.be/bNb2fEVKeEo\nhttp://cs231n.github.io/convolutional-networks/\nhttps://machinelearningmastery.com/convolutional-layers-for-deep-learning-neural-networks/\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/pDdP0TFzsoQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/pDdP0TFzsoQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/pDdP0TFzsoQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/pDdP0TFzsoQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/pDdP0TFzsoQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 14 - Convolutional Neural Network (CNN)",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will implement our first convolutional neural network (CNN) that can do image classification based on the famous CIFAR-10 dataset.\n\nWe will learn:\n- Architecture of CNNs\n- Convolutional Filter\n- Max Pooling\n- Determine the correct layer size\n- Implement the CNN architecture in PyTorch\n\nPart 14: Convolutional Neural Network (CNN)\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nMore about CNNs:\ndeeplizard channel: https://youtu.be/YRhxdVk_sIs\nStanford Lecture: https://youtu.be/bNb2fEVKeEo\nhttp://cs231n.github.io/convolutional-networks/\nhttps://machinelearningmastery.com/convolutional-layers-for-deep-learning-neural-networks/\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1167",
                "likeCount": "52",
                "dislikeCount": "2",
                "favoriteCount": "0",
                "commentCount": "17",
                "duration": "PT22M7S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "FptVpIPhdpM": {
                "publishedAt": "2020-02-02T14:00:02.000Z",
                "title": "How To Add A Progress Bar In Python With Just One Line - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial I show you how you can add a Progress Bar to your Python code in just one line of code! We use the great 'tqdm' module for this that can simply be installed with \"pip install tqdm\". I show you the iterable based and the manual controlled approach.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/FptVpIPhdpM/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/FptVpIPhdpM/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/FptVpIPhdpM/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/FptVpIPhdpM/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/FptVpIPhdpM/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "How To Add A Progress Bar In Python With Just One Line - Python Tutorial",
                    "description": "In this Python Tutorial I show you how you can add a Progress Bar to your Python code in just one line of code! We use the great 'tqdm' module for this that can simply be installed with \"pip install tqdm\". I show you the iterable based and the manual controlled approach.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding #Tutorial"
                },
                "viewCount": "833",
                "likeCount": "23",
                "dislikeCount": "2",
                "favoriteCount": "0",
                "commentCount": "7",
                "duration": "PT5M27S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "oPhxf2fXHkQ": {
                "publishedAt": "2020-01-30T20:44:23.000Z",
                "title": "PyTorch Tutorial 13 - Feed-Forward Neural Network",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will implement our first multilayer neural network that can do digit classification based on the famous MNIST dataset.\n\nWe put all the things from the last tutorials together:\n\n- Use the DataLoader to load our dataset and apply a transform to the dataset\n- Implement a feed-forward neural net with input layer, hidden layer, and output layer\n- Apply activation functions. \n- Set up loss and optimizer \n- Training loop that can use batch training. \n- Evaluate our model and calculate the accuracy. \n- Additionally, we will make sure that our whole code can also run on the gpu if we have gpu support.\n\nPart 13: Feed-Forward Neural Network\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/oPhxf2fXHkQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/oPhxf2fXHkQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/oPhxf2fXHkQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/oPhxf2fXHkQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/oPhxf2fXHkQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 13 - Feed-Forward Neural Network",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will implement our first multilayer neural network that can do digit classification based on the famous MNIST dataset.\n\nWe put all the things from the last tutorials together:\n\n- Use the DataLoader to load our dataset and apply a transform to the dataset\n- Implement a feed-forward neural net with input layer, hidden layer, and output layer\n- Apply activation functions. \n- Set up loss and optimizer \n- Training loop that can use batch training. \n- Evaluate our model and calculate the accuracy. \n- Additionally, we will make sure that our whole code can also run on the gpu if we have gpu support.\n\nPart 13: Feed-Forward Neural Network\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "876",
                "likeCount": "22",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "7",
                "duration": "PT21M34S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "RaIu2-NM0t0": {
                "publishedAt": "2020-01-25T15:00:05.000Z",
                "title": "List Comprehension in Python - A Python Feature You MUST KNOW - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Tutorial we will be learning about Lists Comprehension in Python. List comprehension provides a simple and concise way to create lists. It is a great feature that every Python programmer should know!\n\nWe will learn:\n- What is list comprehension and why should we use it\n- How do we use list comprehension\n- The syntax of list comprehension\n- The extended syntax with conditional statements\n- Set and Dictionary Comprehension\n- Speed Comparison: List comprehension vs. For-Loops\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/RaIu2-NM0t0/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/RaIu2-NM0t0/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/RaIu2-NM0t0/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/RaIu2-NM0t0/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/RaIu2-NM0t0/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "List Comprehension in Python - A Python Feature You MUST KNOW - Python Tutorial",
                    "description": "In this Python Tutorial we will be learning about Lists Comprehension in Python. List comprehension provides a simple and concise way to create lists. It is a great feature that every Python programmer should know!\n\nWe will learn:\n- What is list comprehension and why should we use it\n- How do we use list comprehension\n- The syntax of list comprehension\n- The extended syntax with conditional statements\n- Set and Dictionary Comprehension\n- Speed Comparison: List comprehension vs. For-Loops\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/python-knowledge\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #Coding"
                },
                "viewCount": "190",
                "likeCount": "9",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT16M5S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "3t9lZM7SS7k": {
                "publishedAt": "2020-01-22T14:08:46.000Z",
                "title": "PyTorch Tutorial 12 - Activation Functions",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn about activation functions in neural nets. What are activation functions, why are they needed, and how do we apply them in PyTorch.\n\nI go over following activation functions:\n- Binary Step\n- Sigmoid\n- TanH (Hyperbolic Tangent)\n- ReLU\n- Leaky ReLU\n- Softmax\n \nPart 12: Activation Functions\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/3t9lZM7SS7k/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/3t9lZM7SS7k/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/3t9lZM7SS7k/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/3t9lZM7SS7k/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/3t9lZM7SS7k/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 12 - Activation Functions",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn about activation functions in neural nets. What are activation functions, why are they needed, and how do we apply them in PyTorch.\n\nI go over following activation functions:\n- Binary Step\n- Sigmoid\n- TanH (Hyperbolic Tangent)\n- ReLU\n- Leaky ReLU\n- Softmax\n \nPart 12: Activation Functions\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "581",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT10M",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/01k8wb"
                ],
                "relevantTopicIds": [
                    "/m/01k8wb"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Knowledge"
                ]
            },
            "FoPPgcpSmNs": {
                "publishedAt": "2020-01-18T15:00:06.000Z",
                "title": "Select Movies with Python - Web Scraping Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Welcome to a fun little Python Tutorial! Scrape the IMDb Top 250 movies and let Python choose a movie for you! Learn how to use requests and BeautifulSoup to scrape websites.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/python-fun\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #WebScraping #BeautifulSoup",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/FoPPgcpSmNs/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/FoPPgcpSmNs/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/FoPPgcpSmNs/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/FoPPgcpSmNs/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/FoPPgcpSmNs/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Select Movies with Python - Web Scraping Tutorial",
                    "description": "Welcome to a fun little Python Tutorial! Scrape the IMDb Top 250 movies and let Python choose a movie for you! Learn how to use requests and BeautifulSoup to scrape websites.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/python-fun\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #WebScraping #BeautifulSoup"
                },
                "viewCount": "448",
                "likeCount": "21",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "8",
                "duration": "PT20M37S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "7q7E91pHoW4": {
                "publishedAt": "2020-01-14T16:00:01.000Z",
                "title": "PyTorch Tutorial 11 - Softmax and Cross Entropy",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn about the softmax function and the cross entropy loss function. Softmax and cross entropy are popular functions used in neural nets, especially in multiclass classification problems. Learn the math behind these functions, and when and how to use them in PyTorch. Also learn differences between multiclass and binary classification problems.\n\n- Softmax function\n- Cross entropy loss\n- Use softmax and cross entropy in PyTorch\n- Differences between binary and multiclass classification\n\nPart 11: Softmax and Cross Entropy\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/7q7E91pHoW4/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/7q7E91pHoW4/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/7q7E91pHoW4/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/7q7E91pHoW4/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/7q7E91pHoW4/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 11 - Softmax and Cross Entropy",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn about the softmax function and the cross entropy loss function. Softmax and cross entropy are popular functions used in neural nets, especially in multiclass classification problems. Learn the math behind these functions, and when and how to use them in PyTorch. Also learn differences between multiclass and binary classification problems.\n\n- Softmax function\n- Cross entropy loss\n- Use softmax and cross entropy in PyTorch\n- Differences between binary and multiclass classification\n\nPart 11: Softmax and Cross Entropy\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1062",
                "likeCount": "27",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT18M17S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "t2k5Lsbpj8Y": {
                "publishedAt": "2020-01-11T14:00:07.000Z",
                "title": "Download Images With Python Automatically - Python Web Scraping Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn how we can automatically scrape and download images from Google Images with Python. We will use two Python packages called requests and BeautifulSoup for this Tutorial.\n\nJust put in a search word and the number of images you want, and Python can do the rest for you :)\n\nIf you enjoyed this video, please subscribe to the channel!\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/python-fun\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #WebScraping #BeautifulSoup",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/t2k5Lsbpj8Y/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/t2k5Lsbpj8Y/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/t2k5Lsbpj8Y/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/t2k5Lsbpj8Y/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/t2k5Lsbpj8Y/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Download Images With Python Automatically - Python Web Scraping Tutorial",
                    "description": "Learn how we can automatically scrape and download images from Google Images with Python. We will use two Python packages called requests and BeautifulSoup for this Tutorial.\n\nJust put in a search word and the number of images you want, and Python can do the rest for you :)\n\nIf you enjoyed this video, please subscribe to the channel!\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/python-fun\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #WebScraping #BeautifulSoup"
                },
                "viewCount": "694",
                "likeCount": "28",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "11",
                "duration": "PT14M21S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "X_QOZEko5uE": {
                "publishedAt": "2020-01-07T15:00:06.000Z",
                "title": "PyTorch Tutorial 10 - Dataset Transforms",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn how we can use dataset transforms together with the built-in Dataset class.\nApply built-in transforms to images, arrays, and tensors. Or write your own custom Transform classes.\n\n- Dataset Transforms\n- Use built-in Transforms\n- Implement custom Transforms\n\nPart 10: Dataset Transforms\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/X_QOZEko5uE/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/X_QOZEko5uE/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/X_QOZEko5uE/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/X_QOZEko5uE/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/X_QOZEko5uE/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 10 - Dataset Transforms",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn how we can use dataset transforms together with the built-in Dataset class.\nApply built-in transforms to images, arrays, and tensors. Or write your own custom Transform classes.\n\n- Dataset Transforms\n- Use built-in Transforms\n- Implement custom Transforms\n\nPart 10: Dataset Transforms\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1134",
                "likeCount": "26",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "6",
                "duration": "PT10M43S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "PXOzkkB5eH0": {
                "publishedAt": "2020-01-04T16:02:06.000Z",
                "title": "PyTorch Tutorial 09 - Dataset and DataLoader - Batch Training",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we see how we can use the built-in Dataset and DataLoader classes and improve our pipeline with batch training. See how we can write our own Dataset class and use available built-in datasets. \n\n- Dataset and DataLoader\n- Automatic batch calculation\n- Batch optimization in training loop\n\nPart 09: Dataset and DataLoader\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/PXOzkkB5eH0/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/PXOzkkB5eH0/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/PXOzkkB5eH0/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/PXOzkkB5eH0/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/PXOzkkB5eH0/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 09 - Dataset and DataLoader - Batch Training",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we see how we can use the built-in Dataset and DataLoader classes and improve our pipeline with batch training. See how we can write our own Dataset class and use available built-in datasets. \n\n- Dataset and DataLoader\n- Automatic batch calculation\n- Batch optimization in training loop\n\nPart 09: Dataset and DataLoader\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "2580",
                "likeCount": "58",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "10",
                "duration": "PT15M27S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "OGpQxIkR4ao": {
                "publishedAt": "2019-12-30T14:00:02.000Z",
                "title": "PyTorch Tutorial 08 - Logistic Regression",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we implement a logistic regression algorithm and apply all the concepts that we have learned so far:\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 08: Logistic Regression\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/OGpQxIkR4ao/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/OGpQxIkR4ao/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/OGpQxIkR4ao/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/OGpQxIkR4ao/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/OGpQxIkR4ao/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 08 - Logistic Regression",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we implement a logistic regression algorithm and apply all the concepts that we have learned so far:\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 08: Logistic Regression\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLogistic Regression from scratch:\nhttps://youtu.be/JDU3AzH3WKg\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1052",
                "likeCount": "23",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "6",
                "duration": "PT18M22S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "YAJ5XBwlN4o": {
                "publishedAt": "2019-12-29T22:00:24.000Z",
                "title": "PyTorch Tutorial 07 - Linear Regression",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we implement a logistic regression algorithm and apply all the concepts that we have learned so far:\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 07: Linear Regression\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/YAJ5XBwlN4o/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/YAJ5XBwlN4o/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/YAJ5XBwlN4o/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/YAJ5XBwlN4o/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/YAJ5XBwlN4o/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 07 - Linear Regression",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we implement a logistic regression algorithm and apply all the concepts that we have learned so far:\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 07: Linear Regression\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "991",
                "likeCount": "27",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT12M11S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "VVDHU_TWwUg": {
                "publishedAt": "2019-12-28T11:00:06.000Z",
                "title": "PyTorch Tutorial 06 - Training Pipeline: Model, Loss, and Optimizer",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we improve the code from the last part and will learn how a complete training pipeline is implemented in PyTorch. We replace the manually computed loss and weight updates with a loss and an optimizer from the PyTorch framework, which can do the optimization for us. We will then see how a PyTorch model is implemented and used for the forward pass.\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 06: Training Pipeline: Model, Loss, and Optimizer\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/VVDHU_TWwUg/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/VVDHU_TWwUg/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/VVDHU_TWwUg/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/VVDHU_TWwUg/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/VVDHU_TWwUg/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 06 - Training Pipeline: Model, Loss, and Optimizer",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we improve the code from the last part and will learn how a complete training pipeline is implemented in PyTorch. We replace the manually computed loss and weight updates with a loss and an optimizer from the PyTorch framework, which can do the optimization for us. We will then see how a PyTorch model is implemented and used for the forward pass.\n\n- Training Pipeline in PyTorch\n- Model Design\n- Loss and Optimizer\n- Automatic Training steps with forward pass, backward pass, and weight updates\n\nPart 06: Training Pipeline: Model, Loss, and Optimizer\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1332",
                "likeCount": "27",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "19",
                "duration": "PT14M16S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "E-I2DNVzQLg": {
                "publishedAt": "2019-12-27T11:00:05.000Z",
                "title": "PyTorch Tutorial 05 - Gradient Descent with Autograd and Backpropagation",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn how we can use the autograd engine in practice. First we will implement Linear regression from scratch, and then we will learn how PyTorch can do the gradient calculation for us.\n\n- Linear Regression from scratch\n- Use Pytorch's autograd and backpropagation to calculate gradients\n\nPart 05: Gradient Descent with Autograd\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/E-I2DNVzQLg/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/E-I2DNVzQLg/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/E-I2DNVzQLg/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/E-I2DNVzQLg/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/E-I2DNVzQLg/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 05 - Gradient Descent with Autograd and Backpropagation",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we will learn how we can use the autograd engine in practice. First we will implement Linear regression from scratch, and then we will learn how PyTorch can do the gradient calculation for us.\n\n- Linear Regression from scratch\n- Use Pytorch's autograd and backpropagation to calculate gradients\n\nPart 05: Gradient Descent with Autograd\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1458",
                "likeCount": "35",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "12",
                "duration": "PT17M31S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "3Kb0QS6z7WA": {
                "publishedAt": "2019-12-26T11:00:00.000Z",
                "title": "PyTorch Tutorial 04 - Backpropagation - Theory With Example",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part I will explain the famous backpropagation algorithm. I will explain all the necessary concepts and walk you through a concrete example. At the end we will see how easy it is to \nuse backpropagation in PyTorch.\n\n- Chain Rule\n- Computational Graph and local gradients\n- Forward and backward pass\n- Concrete example with numbers (Linear Regression)\n- How to use backpropagation in PyTorch\n\nPart 04: Backpropagation - Theory With Example\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01: \nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/3Kb0QS6z7WA/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/3Kb0QS6z7WA/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/3Kb0QS6z7WA/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/3Kb0QS6z7WA/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/3Kb0QS6z7WA/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 04 - Backpropagation - Theory With Example",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part I will explain the famous backpropagation algorithm. I will explain all the necessary concepts and walk you through a concrete example. At the end we will see how easy it is to \nuse backpropagation in PyTorch.\n\n- Chain Rule\n- Computational Graph and local gradients\n- Forward and backward pass\n- Concrete example with numbers (Linear Regression)\n- How to use backpropagation in PyTorch\n\nPart 04: Backpropagation - Theory With Example\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01: \nhttps://youtu.be/EMXfZB8FVUA\n\nLinear Regression from scratch:\nhttps://youtu.be/4swNt7PiamQ\n\nCode for this tutorial series:\nhttps://github.com/python-engineer/pytorchTutorial\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "1515",
                "likeCount": "40",
                "dislikeCount": "2",
                "favoriteCount": "0",
                "commentCount": "1",
                "duration": "PT13M13S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/01k8wb",
                    "/m/01k8wb"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Knowledge"
                ]
            },
            "DbeIqrwb_dE": {
                "publishedAt": "2019-12-25T09:44:56.000Z",
                "title": "PyTorch Tutorial 03 - Gradient Calculation With Autograd",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn how to calculate gradients using the autograd package in PyTorch.\nThis tutorial contains the following topics:\n\n- requires_grad attribute for Tensors\n- Computational graph\n- Backpropagation (brief explanation)\n- How to stop autograd from tracking history\n- How to zero (empty) gradients\n\nPart 03: Gradient Calculation With Autograd\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/DbeIqrwb_dE/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/DbeIqrwb_dE/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/DbeIqrwb_dE/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/DbeIqrwb_dE/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/DbeIqrwb_dE/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 03 - Gradient Calculation With Autograd",
                    "description": "Learn all the basics you need to get started with this deep learning framework! In this part we learn how to calculate gradients using the autograd package in PyTorch.\nThis tutorial contains the following topics:\n\n- requires_grad attribute for Tensors\n- Computational graph\n- Backpropagation (brief explanation)\n- How to stop autograd from tracking history\n- How to zero (empty) gradients\n\nPart 03: Gradient Calculation With Autograd\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "2698",
                "likeCount": "59",
                "dislikeCount": "3",
                "favoriteCount": "0",
                "commentCount": "6",
                "duration": "PT15M54S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "exaWOE8jvy8": {
                "publishedAt": "2019-12-16T12:42:28.000Z",
                "title": "PyTorch Tutorial 02 - Tensor Basics",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Learn all the basics you need to get started with this deep learning framework! This part covers the basics of Tensors and Tensor operations in PyTorch. Learn also how to convert from numpy data to PyTorch tensors and vice versa!\n\nPart 02: Tensor Basics\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/exaWOE8jvy8/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/exaWOE8jvy8/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/exaWOE8jvy8/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/exaWOE8jvy8/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/exaWOE8jvy8/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 02 - Tensor Basics",
                    "description": "Learn all the basics you need to get started with this deep learning framework! This part covers the basics of Tensors and Tensor operations in PyTorch. Learn also how to convert from numpy data to PyTorch tensors and vice versa!\n\nPart 02: Tensor Basics\n\nIf you enjoyed this video, please subscribe to the channel!\n\nOfficial website:\nhttps://pytorch.org/\n\nPart 01:\nhttps://youtu.be/EMXfZB8FVUA\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "2972",
                "likeCount": "50",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "18",
                "duration": "PT18M28S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "EMXfZB8FVUA": {
                "publishedAt": "2019-12-13T22:33:16.000Z",
                "title": "PyTorch Tutorial 01 - Installation",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "New Tutorial series about PyTorch! Learn all the basics you need to get started with this deep learning framework!\n\nPart 01: Installation\n\nI show you how I install PyTorch on my Mac using Anaconda. Installation on Linux or Windows can be done almost the same way.\n\nhttps://pytorch.org/\nhttps://developer.nvidia.com/cuda-downloads\n\nAnaconda Tutorial:\nhttps://youtu.be/9nEh-OXVaNI\n\nIf you enjoyed this video, please subscribe to the channel!\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/EMXfZB8FVUA/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/EMXfZB8FVUA/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/EMXfZB8FVUA/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/EMXfZB8FVUA/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/EMXfZB8FVUA/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PyTorch Tutorial 01 - Installation",
                    "description": "New Tutorial series about PyTorch! Learn all the basics you need to get started with this deep learning framework!\n\nPart 01: Installation\n\nI show you how I install PyTorch on my Mac using Anaconda. Installation on Linux or Windows can be done almost the same way.\n\nhttps://pytorch.org/\nhttps://developer.nvidia.com/cuda-downloads\n\nAnaconda Tutorial:\nhttps://youtu.be/9nEh-OXVaNI\n\nIf you enjoyed this video, please subscribe to the channel!\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #DeepLearning #Pytorch"
                },
                "viewCount": "3908",
                "likeCount": "30",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "14",
                "duration": "PT5M45S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "9nEh-OXVaNI": {
                "publishedAt": "2019-12-08T16:54:34.000Z",
                "title": "Anaconda Tutorial - Installation and Basic Commands",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Tutorial I show you how you can install and use Anaconda. Anaconda is a free Python distribution specifically designed for scientific computing. It\u2019 great for data science and machine learning tasks. In this video you can learn:\n\n- Installation\n- Manage multiple virtual Python environments\n- Package management, e.g. install numpy, scikit-learn, pandas etc. in your environments\n\nIf you enjoyed this video, please subscribe to the channel!\n\nAnaconda website:\nhttps://www.anaconda.com/distribution/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/9nEh-OXVaNI/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/9nEh-OXVaNI/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/9nEh-OXVaNI/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/9nEh-OXVaNI/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/9nEh-OXVaNI/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Anaconda Tutorial - Installation and Basic Commands",
                    "description": "In this Tutorial I show you how you can install and use Anaconda. Anaconda is a free Python distribution specifically designed for scientific computing. It\u2019 great for data science and machine learning tasks. In this video you can learn:\n\n- Installation\n- Manage multiple virtual Python environments\n- Package management, e.g. install numpy, scikit-learn, pandas etc. in your environments\n\nIf you enjoyed this video, please subscribe to the channel!\n\nAnaconda website:\nhttps://www.anaconda.com/distribution/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "244",
                "likeCount": "5",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "9",
                "duration": "PT12M",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "vtuH4VRq1AU": {
                "publishedAt": "2019-12-04T16:30:02.000Z",
                "title": "K-Means Clustering in Python - Machine Learning From Scratch 12 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a K-Means algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/vtuH4VRq1AU/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/vtuH4VRq1AU/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/vtuH4VRq1AU/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/vtuH4VRq1AU/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/vtuH4VRq1AU/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "K-Means Clustering in Python - Machine Learning From Scratch 12 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a K-Means algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "988",
                "likeCount": "17",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "6",
                "duration": "PT29M28S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "52d7ha-GdV8": {
                "publishedAt": "2019-11-30T16:00:00.000Z",
                "title": "PCA (Principal Component Analysis) in Python - Machine Learning From Scratch 11 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a PCA algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/52d7ha-GdV8/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/52d7ha-GdV8/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/52d7ha-GdV8/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/52d7ha-GdV8/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/52d7ha-GdV8/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "PCA (Principal Component Analysis) in Python - Machine Learning From Scratch 11 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a PCA algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "862",
                "likeCount": "21",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT17M17S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "Oq1cKjR8hNo": {
                "publishedAt": "2019-11-27T16:30:00.000Z",
                "title": "Random Forest in Python - Machine Learning From Scratch 10 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Random Forest algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/Oq1cKjR8hNo/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/Oq1cKjR8hNo/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/Oq1cKjR8hNo/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/Oq1cKjR8hNo/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/Oq1cKjR8hNo/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Random Forest in Python - Machine Learning From Scratch 10 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Random Forest algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "775",
                "likeCount": "13",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "7",
                "duration": "PT13M19S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "Bqi7EFFvNOg": {
                "publishedAt": "2019-11-22T10:30:00.000Z",
                "title": "Decision Tree in Python Part 2/2 - Machine Learning From Scratch 09 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Decision Tree algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nPart 1 will cover the theory, and Part 2 contains the implementation.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/Bqi7EFFvNOg/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/Bqi7EFFvNOg/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/Bqi7EFFvNOg/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/Bqi7EFFvNOg/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/Bqi7EFFvNOg/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Decision Tree in Python Part 2/2 - Machine Learning From Scratch 09 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Decision Tree algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nPart 1 will cover the theory, and Part 2 contains the implementation.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "1004",
                "likeCount": "18",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "16",
                "duration": "PT30M44S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "jVh5NA9ERDA": {
                "publishedAt": "2019-11-21T21:56:50.000Z",
                "title": "Decision Tree in Python Part 1/2 - Machine Learning From Scratch 08 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Decision Tree algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nPart 1 will cover the theory, and Part 2 contains the implementation.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/jVh5NA9ERDA/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/jVh5NA9ERDA/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/jVh5NA9ERDA/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/jVh5NA9ERDA/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/jVh5NA9ERDA/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Decision Tree in Python Part 1/2 - Machine Learning From Scratch 08 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a Decision Tree algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nPart 1 will cover the theory, and Part 2 contains the implementation.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "982",
                "likeCount": "18",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT10M35S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "UX0f9BNBcsY": {
                "publishedAt": "2019-10-19T10:38:49.000Z",
                "title": "SVM (Support Vector Machine) in Python - Machine Learning From Scratch 07 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a SVM (Support Vector Machine) algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/support-vector-machine-introduction-to-machine-learning-algorithms-934a444fca47\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/UX0f9BNBcsY/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/UX0f9BNBcsY/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/UX0f9BNBcsY/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/UX0f9BNBcsY/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/UX0f9BNBcsY/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "ML",
                    "Machine Learning",
                    "SVM",
                    "numpy",
                    "Support Vector Machine"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "SVM (Support Vector Machine) in Python - Machine Learning From Scratch 07 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a SVM (Support Vector Machine) algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/support-vector-machine-introduction-to-machine-learning-algorithms-934a444fca47\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "3249",
                "likeCount": "41",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "12",
                "duration": "PT19M28S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "t2ym2a3pb_Y": {
                "publishedAt": "2019-10-11T15:22:09.000Z",
                "title": "Perceptron in Python - Machine Learning From Scratch 06 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a single-layer Perceptron algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://sebastianraschka.com/Articles/2015_singlelayer_neurons.html\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/t2ym2a3pb_Y/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/t2ym2a3pb_Y/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/t2ym2a3pb_Y/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/t2ym2a3pb_Y/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/t2ym2a3pb_Y/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Machine Learning",
                    "Tutorial",
                    "Perceptron"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Perceptron in Python - Machine Learning From Scratch 06 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement a single-layer Perceptron algorithm using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://sebastianraschka.com/Articles/2015_singlelayer_neurons.html\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "2732",
                "likeCount": "39",
                "dislikeCount": "2",
                "favoriteCount": "0",
                "commentCount": "5",
                "duration": "PT17M45S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "BqUmKsfSWho": {
                "publishedAt": "2019-09-29T16:00:04.000Z",
                "title": "Naive Bayes in Python - Machine Learning From Scratch 05 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Naive Bayes algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/naive-bayes-classifier-81d512f50a7c\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/BqUmKsfSWho/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/BqUmKsfSWho/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/BqUmKsfSWho/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/BqUmKsfSWho/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/BqUmKsfSWho/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Machine Learning",
                    "Naive Bayes",
                    "numpy",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Naive Bayes in Python - Machine Learning From Scratch 05 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Naive Bayes algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://towardsdatascience.com/naive-bayes-classifier-81d512f50a7c\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "5284",
                "likeCount": "88",
                "dislikeCount": "4",
                "favoriteCount": "0",
                "commentCount": "19",
                "duration": "PT20M42S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "PC7cVBbU7UQ": {
                "publishedAt": "2019-09-22T16:00:06.000Z",
                "title": "Linear and Logistic Regression in 60 lines of Python - Machine Learning From Scratch 04",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to refactor the code from the previous two videos. We will implement Linear and Logistic Regression in only 60 lines of Python, with the help of a Base Regression class.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/PC7cVBbU7UQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/PC7cVBbU7UQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/PC7cVBbU7UQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/PC7cVBbU7UQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/PC7cVBbU7UQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Machine Learning",
                    "numpy",
                    "Linear Regression",
                    "Logistic Regression",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Linear and Logistic Regression in 60 lines of Python - Machine Learning From Scratch 04",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to refactor the code from the previous two videos. We will implement Linear and Logistic Regression in only 60 lines of Python, with the help of a Base Regression class.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "313",
                "likeCount": "6",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "0",
                "duration": "PT7M30S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "JDU3AzH3WKg": {
                "publishedAt": "2019-09-15T16:00:02.000Z",
                "title": "Logistic Regression in Python - Machine Learning From Scratch 03 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Logistic Regression algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://ml-cheatsheet.readthedocs.io/en/latest/logistic_regression.html\nhttps://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc\n\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/JDU3AzH3WKg/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/JDU3AzH3WKg/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/JDU3AzH3WKg/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/JDU3AzH3WKg/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/JDU3AzH3WKg/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Machine Learning",
                    "numpy",
                    "Tutorial",
                    "Logistic Regression"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Logistic Regression in Python - Machine Learning From Scratch 03 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Logistic Regression algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://ml-cheatsheet.readthedocs.io/en/latest/logistic_regression.html\nhttps://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc\n\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "3828",
                "likeCount": "62",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "23",
                "duration": "PT17M9S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "4swNt7PiamQ": {
                "publishedAt": "2019-09-11T13:25:56.000Z",
                "title": "Linear Regression in Python - Machine Learning From Scratch 02 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Linear Regression algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://ml-cheatsheet.readthedocs.io/en/latest/linear_regression.html\nhttps://ml-cheatsheet.readthedocs.io/en/latest/gradient_descent.html\n\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/4swNt7PiamQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/4swNt7PiamQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/4swNt7PiamQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/4swNt7PiamQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/4swNt7PiamQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Machine Learning",
                    "Regression",
                    "numpy",
                    "Tutorial",
                    "Gradient descent"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Linear Regression in Python - Machine Learning From Scratch 02 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the Linear Regression algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nFurther readings:\nhttps://ml-cheatsheet.readthedocs.io/en/latest/linear_regression.html\nhttps://ml-cheatsheet.readthedocs.io/en/latest/gradient_descent.html\n\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "2233",
                "likeCount": "51",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "20",
                "duration": "PT20M35S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "ngLyX54e1LU": {
                "publishedAt": "2019-09-03T15:00:07.000Z",
                "title": "KNN (K Nearest Neighbors) in Python - Machine Learning From Scratch 01 - Python Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the K Nearest Neighbors (KNN) algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/ngLyX54e1LU/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/ngLyX54e1LU/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/ngLyX54e1LU/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/ngLyX54e1LU/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/ngLyX54e1LU/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Machine Learning",
                    "ML",
                    "numpy",
                    "KNN",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "KNN (K Nearest Neighbors) in Python - Machine Learning From Scratch 01 - Python Tutorial",
                    "description": "In this Machine Learning from Scratch Tutorial, we are going to implement the K Nearest Neighbors (KNN) algorithm, using only built-in Python modules and numpy. We will also learn about the concept and the math behind this popular ML algorithm.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nThe code can be found here:\nhttps://github.com/python-engineer/MLfromscratch\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python #MachineLearning"
                },
                "viewCount": "8216",
                "likeCount": "121",
                "dislikeCount": "2",
                "favoriteCount": "0",
                "commentCount": "28",
                "duration": "PT21M58S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "YE6a31J65Rc": {
                "publishedAt": "2019-08-25T15:00:10.000Z",
                "title": "Context Managers in Python - Advanced Python 21 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, we will talk about context managers and the with statement. Context managers are a great tool for resource management. They allow you to allocate and release resources precisely when you want to. A well-known example is the with open() statement. In this video we will learn:\n\n- The concept of context managers, and what they are used for\n- Typical examples of context managers\n- How can we implement our own context manager.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython21_contextmanagers\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/YE6a31J65Rc/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/YE6a31J65Rc/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/YE6a31J65Rc/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/YE6a31J65Rc/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/YE6a31J65Rc/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "Context Manager",
                    "With statement"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Context Managers in Python - Advanced Python 21 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, we will talk about context managers and the with statement. Context managers are a great tool for resource management. They allow you to allocate and release resources precisely when you want to. A well-known example is the with open() statement. In this video we will learn:\n\n- The concept of context managers, and what they are used for\n- Typical examples of context managers\n- How can we implement our own context manager.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython21_contextmanagers\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "619",
                "likeCount": "14",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT15M44S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "RQ6Ur_T0G3Y": {
                "publishedAt": "2019-08-19T17:41:48.000Z",
                "title": "Shallow vs Deep Copying in Python - Advanced Python 20 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, we will talk about copying. We will learn how we can copy mutable elements with the built-in copy module, and the difference between shallow and deep copies. We will also have a look at how to make actual copies of custom objects.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython20_copy\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/RQ6Ur_T0G3Y/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/RQ6Ur_T0G3Y/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/RQ6Ur_T0G3Y/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/RQ6Ur_T0G3Y/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/RQ6Ur_T0G3Y/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "Copy"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Shallow vs Deep Copying in Python - Advanced Python 20 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, we will talk about copying. We will learn how we can copy mutable elements with the built-in copy module, and the difference between shallow and deep copies. We will also have a look at how to make actual copies of custom objects.\n\nIf you enjoyed this video, please subscribe to the channel!\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython20_copy\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "643",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT9M56S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "M7daahMOMMc": {
                "publishedAt": "2019-08-09T18:32:16.000Z",
                "title": "The asterisk (*) operator in Python - Advanced Python 19 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, I will talk about the asterisk (*) or star operator in Python. I will talk about the different use cases:\n\n- Multiplication and power operations\n- Creation of list / tuple / string with repeated elements\n- Variable length arguments (*args and **kwargs)\n- Keyword only arguments\n- Unpacking container data types into function arguments\n- Unpacking container into single and multiple elements\n- Merging lists / dictionaries\n\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython19_asterisk\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/M7daahMOMMc/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/M7daahMOMMc/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/M7daahMOMMc/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/M7daahMOMMc/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/M7daahMOMMc/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "Asterisk",
                    "Unpacking"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "The asterisk (*) operator in Python - Advanced Python 19 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, I will talk about the asterisk (*) or star operator in Python. I will talk about the different use cases:\n\n- Multiplication and power operations\n- Creation of list / tuple / string with repeated elements\n- Variable length arguments (*args and **kwargs)\n- Keyword only arguments\n- Unpacking container data types into function arguments\n- Unpacking container into single and multiple elements\n- Merging lists / dictionaries\n\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython19_asterisk\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "539",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "1",
                "duration": "PT13M1S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "iSEyb7ehLK0": {
                "publishedAt": "2019-08-07T21:28:23.000Z",
                "title": "Function arguments in detail - Advanced Python 18 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, I will talk about function arguments in detail. This video will cover:\n\n- The difference between arguments and parameters\n- Positional and keyword arguments\n- Default arguments\n- Variable-length arguments (*args and **kwargs)\n- Container unpacking into function arguments\n- Local vs. global arguments\n- Parameter passing (by value or by reference?)\n\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython18_functionarguments\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/iSEyb7ehLK0/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/iSEyb7ehLK0/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/iSEyb7ehLK0/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/iSEyb7ehLK0/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/iSEyb7ehLK0/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "Functions"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Function arguments in detail - Advanced Python 18 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, I will talk about function arguments in detail. This video will cover:\n\n- The difference between arguments and parameters\n- Positional and keyword arguments\n- Default arguments\n- Variable-length arguments (*args and **kwargs)\n- Container unpacking into function arguments\n- Local vs. global arguments\n- Parameter passing (by value or by reference?)\n\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython18_functionarguments\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "345",
                "likeCount": "5",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT24M21S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "IT8RYokUvvQ": {
                "publishedAt": "2019-08-04T18:17:38.000Z",
                "title": "Multiprocessing in Python - Advanced Python 17 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, I will go into more detail about the multiprocessing module in Python. This video will cover:\n\n- How to create and run multiple processes\n- How to share data between processes\n- Hot to use Locks to prevent race conditions\n- How to use a Queue for process safe data exchanges\n- How to use a Process Pool to manage multiple worker processes\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython17_multiprocessing\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/IT8RYokUvvQ/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/IT8RYokUvvQ/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/IT8RYokUvvQ/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/IT8RYokUvvQ/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/IT8RYokUvvQ/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "Multiprocessing",
                    "Lock",
                    "Queue"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Multiprocessing in Python - Advanced Python 17 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, I will go into more detail about the multiprocessing module in Python. This video will cover:\n\n- How to create and run multiple processes\n- How to share data between processes\n- Hot to use Locks to prevent race conditions\n- How to use a Queue for process safe data exchanges\n- How to use a Process Pool to manage multiple worker processes\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython17_multiprocessing\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "716",
                "likeCount": "19",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT22M47S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "usyg5vbni34": {
                "publishedAt": "2019-07-28T15:00:09.000Z",
                "title": "Threading in Python - Advanced Python 16 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Threading in Python - Advanced Python 16 - Programming Tutorial\n\nIn this Python Advanced Tutorial, I will go into more detail about the threading module in Python. This video will cover:\n\n- How to share data between threads\n- Hot to use Locks to prevent race conditions\n- What is a daemon thread\n- How to use a Queue for thread safe data exchanges \n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython16_threading\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/usyg5vbni34/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/usyg5vbni34/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/usyg5vbni34/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/usyg5vbni34/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/usyg5vbni34/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Tutorial",
                    "Programming",
                    "Threading",
                    "Lock",
                    "Queue"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Threading in Python - Advanced Python 16 - Programming Tutorial",
                    "description": "Threading in Python - Advanced Python 16 - Programming Tutorial\n\nIn this Python Advanced Tutorial, I will go into more detail about the threading module in Python. This video will cover:\n\n- How to share data between threads\n- Hot to use Locks to prevent race conditions\n- What is a daemon thread\n- How to use a Queue for thread safe data exchanges \n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython16_threading\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "670",
                "likeCount": "21",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT23M42S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "vbtxtvuCFRM": {
                "publishedAt": "2019-07-26T18:46:32.000Z",
                "title": "Threading vs Multiprocessing in Python - Advanced Python 15 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Threading vs Multiprocessing in Python - Advanced Python 15 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Threading and Multiprocessing in Python. With Threading and Multiprocessing you can run code in parallel and speed up your code. This Tutorial will cover:\n\n- the difference between a Process and a Thread\n- The advantages and disadvantages of both\n- The Global interpreter lock (GIL)\n- How and why Threads are limited by the GIL\n- How to use the built-in threading and multiprocessing module to create and run multiple threads or processes.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython15_thread_vs_process\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/vbtxtvuCFRM/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/vbtxtvuCFRM/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/vbtxtvuCFRM/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/vbtxtvuCFRM/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/vbtxtvuCFRM/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial",
                    "GIL",
                    "Lock",
                    "Thread",
                    "Process"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Threading vs Multiprocessing in Python - Advanced Python 15 - Programming Tutorial",
                    "description": "Threading vs Multiprocessing in Python - Advanced Python 15 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Threading and Multiprocessing in Python. With Threading and Multiprocessing you can run code in parallel and speed up your code. This Tutorial will cover:\n\n- the difference between a Process and a Thread\n- The advantages and disadvantages of both\n- The Global interpreter lock (GIL)\n- How and why Threads are limited by the GIL\n- How to use the built-in threading and multiprocessing module to create and run multiple threads or processes.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython15_thread_vs_process\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "1423",
                "likeCount": "37",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "8",
                "duration": "PT14M48S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "4CxB2V2lERs": {
                "publishedAt": "2019-07-18T16:00:00.000Z",
                "title": "Generators in Python - Advanced Python 14 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Generators in Python - Advanced Python 14 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Generators in Python. Generators are functions that return an object that can be iterated over. The special thing is that they generate the items inside the object lazily, which means they generate the items only one at a time, and only when you ask for it. Because of this they are much more memory efficient than other sequence objects when you have to deal with large datasets. In this video, we will learn how generators are implemented, the concept behind them, and we will have a look at the advantages and some examples.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython14_generators\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/4CxB2V2lERs/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/4CxB2V2lERs/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/4CxB2V2lERs/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/4CxB2V2lERs/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/4CxB2V2lERs/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Generators in Python - Advanced Python 14 - Programming Tutorial",
                    "description": "Generators in Python - Advanced Python 14 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Generators in Python. Generators are functions that return an object that can be iterated over. The special thing is that they generate the items inside the object lazily, which means they generate the items only one at a time, and only when you ask for it. Because of this they are much more memory efficient than other sequence objects when you have to deal with large datasets. In this video, we will learn how generators are implemented, the concept behind them, and we will have a look at the advantages and some examples.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython14_generators\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "518",
                "likeCount": "16",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT18M12S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "FXUUSfJO_J4": {
                "publishedAt": "2019-07-15T15:33:02.000Z",
                "title": "Decorators in Python - Advanced Python 13 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Decorators in Python - Advanced Python 13 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Decorators in Python. A decorator is a function that takes another function and extends the behavior of this function without explicitly modifying it. It's a very powerful tool for advanced programmers. In this tutorial, I show you the concept behind decorators, how you can write your own decorators, the difference between function and class decorators, and some typical use cases.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython13_decorators\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/FXUUSfJO_J4/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/FXUUSfJO_J4/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/FXUUSfJO_J4/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/FXUUSfJO_J4/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/FXUUSfJO_J4/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Decorators in Python - Advanced Python 13 - Programming Tutorial",
                    "description": "Decorators in Python - Advanced Python 13 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Decorators in Python. A decorator is a function that takes another function and extends the behavior of this function without explicitly modifying it. It's a very powerful tool for advanced programmers. In this tutorial, I show you the concept behind decorators, how you can write your own decorators, the difference between function and class decorators, and some typical use cases.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython13_decorators\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "604",
                "likeCount": "12",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT21M24S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "CsLsGCbnlJY": {
                "publishedAt": "2019-07-13T17:14:51.000Z",
                "title": "Random Numbers in Python - Advanced Python 12 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Random Numbers in Python - Advanced Python 12 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about random numbers in Python. Python comes with different built-in modules to generate random numbers. In this Tutorial we will have a look at the random module for pseudo-random numbers, the secrets module for cryptographically strong random numbers, and the numpy.random module to generate arrays filled with random numbers.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython12_random\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/CsLsGCbnlJY/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/CsLsGCbnlJY/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/CsLsGCbnlJY/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/CsLsGCbnlJY/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/CsLsGCbnlJY/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Random Numbers in Python - Advanced Python 12 - Programming Tutorial",
                    "description": "Random Numbers in Python - Advanced Python 12 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about random numbers in Python. Python comes with different built-in modules to generate random numbers. In this Tutorial we will have a look at the random module for pseudo-random numbers, the secrets module for cryptographically strong random numbers, and the numpy.random module to generate arrays filled with random numbers.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython12_random\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "379",
                "likeCount": "7",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT14M57S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "EtAGd-3arNE": {
                "publishedAt": "2019-07-03T20:23:31.000Z",
                "title": "JSON in Python - Advanced Python 11 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "JSON in Python - Advanced Python 11 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about JSON in Python. JSON (JavaScript Object Notation) is a leightweight data format that is used for data exchange. Python already comes with a built-in json module that makes working with json data very easy. In this tutorial we will have a look at how we can encode and decode json data with this module, and how we can encode/decode custom objects.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython11_json\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/EtAGd-3arNE/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/EtAGd-3arNE/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/EtAGd-3arNE/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/EtAGd-3arNE/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/EtAGd-3arNE/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "JSON in Python - Advanced Python 11 - Programming Tutorial",
                    "description": "JSON in Python - Advanced Python 11 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about JSON in Python. JSON (JavaScript Object Notation) is a leightweight data format that is used for data exchange. Python already comes with a built-in json module that makes working with json data very easy. In this tutorial we will have a look at how we can encode and decode json data with this module, and how we can encode/decode custom objects.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython11_json\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "576",
                "likeCount": "10",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT17M35S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "p0A4CV4MWd0": {
                "publishedAt": "2019-06-30T17:55:51.000Z",
                "title": "Logging in Python - Advanced Python 10 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Logging in Python - Advanced Python 10 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Logging in Python. Python already comes with a powerful built-in logging module so you can quickly add logging to your application. In this tutorial we will have a look at:\n\n- Different LogLevel\n- Different Configuration options\n- How to log in different modules\n- How to use different LogHandlers\n- How to capture StackTraces in your log\n- How to use Rotating FileHandler\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython10_logging/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/p0A4CV4MWd0/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/p0A4CV4MWd0/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/p0A4CV4MWd0/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/p0A4CV4MWd0/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/p0A4CV4MWd0/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Logging in Python - Advanced Python 10 - Programming Tutorial",
                    "description": "Logging in Python - Advanced Python 10 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Logging in Python. Python already comes with a powerful built-in logging module so you can quickly add logging to your application. In this tutorial we will have a look at:\n\n- Different LogLevel\n- Different Configuration options\n- How to log in different modules\n- How to use different LogHandlers\n- How to capture StackTraces in your log\n- How to use Rotating FileHandler\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython10_logging/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "1635",
                "likeCount": "31",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "7",
                "duration": "PT22M30S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "qOuOV4pDVGY": {
                "publishedAt": "2019-06-26T21:01:15.000Z",
                "title": "Exceptions in Python - Advanced Python 09 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Exceptions in Python - Advanced Python 09 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Errors and Exceptions in Python. A Python program terminates as soon as it encounters an error, and an error can be either a syntax error or an exception. In this tutorial we will have a look at:\n\n- Syntax Error vs. Exception\n- Most common built-in Exceptions\n- How to raise Exceptions\n- How to handle Exceptions\n- How to define your own Exception\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython09_exceptions/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/qOuOV4pDVGY/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/qOuOV4pDVGY/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/qOuOV4pDVGY/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/qOuOV4pDVGY/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/qOuOV4pDVGY/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Exceptions in Python - Advanced Python 09 - Programming Tutorial",
                    "description": "Exceptions in Python - Advanced Python 09 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Errors and Exceptions in Python. A Python program terminates as soon as it encounters an error, and an error can be either a syntax error or an exception. In this tutorial we will have a look at:\n\n- Syntax Error vs. Exception\n- Most common built-in Exceptions\n- How to raise Exceptions\n- How to handle Exceptions\n- How to define your own Exception\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython09_exceptions/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "446",
                "likeCount": "14",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "7",
                "duration": "PT16M20S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "D2TJ9wvSP94": {
                "publishedAt": "2019-06-24T19:57:01.000Z",
                "title": "Lambda in Python - Advanced Python 08 - Programming Tutorial - Map Filter Reduce",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Lambda in Python - Advanced Python 08 - Programming Tutorial - Map Filter Reduce\n\nIn this Python Advanced Tutorial, we will be learning about Lambda functions in Python. A lambda function is a small (one line) anonymous function that is defined without a name. It is typically used when you need a simple function that is used only once in your code, or it is used as an argument to higher-order functions. We will go over how you define them, and some use cases together with the built-in sorted(), map(), filter,() and reduce() functions.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython08_lambda/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/D2TJ9wvSP94/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/D2TJ9wvSP94/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/D2TJ9wvSP94/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/D2TJ9wvSP94/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/D2TJ9wvSP94/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Lambda in Python - Advanced Python 08 - Programming Tutorial - Map Filter Reduce",
                    "description": "Lambda in Python - Advanced Python 08 - Programming Tutorial - Map Filter Reduce\n\nIn this Python Advanced Tutorial, we will be learning about Lambda functions in Python. A lambda function is a small (one line) anonymous function that is defined without a name. It is typically used when you need a simple function that is used only once in your code, or it is used as an argument to higher-order functions. We will go over how you define them, and some use cases together with the built-in sorted(), map(), filter,() and reduce() functions.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython08_lambda/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "622",
                "likeCount": "20",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT12M21S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "3ecISAkioPc": {
                "publishedAt": "2019-06-18T18:31:25.000Z",
                "title": "Itertools in Python - Advanced Python 07 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Itertools in Python - Advanced Python 07 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about the itertools module in Python. The itertools module is a collection of tools for handling iterators. It offers some advanced tools like product(), permutations(), combinations(), accumulate(), groupby(), and infinite iterators like cycle(), repeat(), and count().\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython07_itertools/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/3ecISAkioPc/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/3ecISAkioPc/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/3ecISAkioPc/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/3ecISAkioPc/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/3ecISAkioPc/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Itertools in Python - Advanced Python 07 - Programming Tutorial",
                    "description": "Itertools in Python - Advanced Python 07 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about the itertools module in Python. The itertools module is a collection of tools for handling iterators. It offers some advanced tools like product(), permutations(), combinations(), accumulate(), groupby(), and infinite iterators like cycle(), repeat(), and count().\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython07_itertools/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "2871",
                "likeCount": "56",
                "dislikeCount": "1",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT15M23S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "UdcPhnNjSEw": {
                "publishedAt": "2019-06-16T09:11:31.000Z",
                "title": "Collections in Python - Advanced Python 06 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Collections in Python - Advanced Python 06 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about the collections module in Python. The collections module implements special container datatypes and provides alternatives with some additional functionality compared to the general built-in containers, like dict, list, or tuple.\n\nWe will be talking about 5 different types from the collections module: The Counter, the namedtuple, the OrderedDict, the defaultdict, and the deque.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython06_collections/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/UdcPhnNjSEw/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/UdcPhnNjSEw/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/UdcPhnNjSEw/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/UdcPhnNjSEw/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/UdcPhnNjSEw/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Tutorial"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Collections in Python - Advanced Python 06 - Programming Tutorial",
                    "description": "Collections in Python - Advanced Python 06 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about the collections module in Python. The collections module implements special container datatypes and provides alternatives with some additional functionality compared to the general built-in containers, like dict, list, or tuple.\n\nWe will be talking about 5 different types from the collections module: The Counter, the namedtuple, the OrderedDict, the defaultdict, and the deque.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython06_collections/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "4227",
                "likeCount": "101",
                "dislikeCount": "3",
                "favoriteCount": "0",
                "commentCount": "17",
                "duration": "PT14M10S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "e6ivlABOYRI": {
                "publishedAt": "2019-06-14T18:05:55.000Z",
                "title": "Strings in Python - Advanced Python 05 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "Strings in Python - Advanced Python 05 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Strings in Python. A String is an ordered, and immutable collection data type that is used for text representation, and it's one of the most used data types in Python. We will go over how you can use them and some advanced techniques that can be applied to strings.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython05_strings/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/e6ivlABOYRI/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/e6ivlABOYRI/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/e6ivlABOYRI/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/e6ivlABOYRI/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/e6ivlABOYRI/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Programming",
                    "Coding",
                    "Strings"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Strings in Python - Advanced Python 05 - Programming Tutorial",
                    "description": "Strings in Python - Advanced Python 05 - Programming Tutorial\n\nIn this Python Advanced Tutorial, we will be learning about Strings in Python. A String is an ordered, and immutable collection data type that is used for text representation, and it's one of the most used data types in Python. We will go over how you can use them and some advanced techniques that can be applied to strings.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython05_strings/\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "537",
                "likeCount": "20",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "4",
                "duration": "PT24M16S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v",
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "Qs3BSFZnZSI": {
                "publishedAt": "2019-05-28T20:30:09.000Z",
                "title": "Sets in Python - Advanced Python 04 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, we will be learning about Sets in Python. A Set is a collection data type that is unordered and mutable, but unlike lists or tuples it does not allow duplicate elements. We will go over how you can use them and some advanced techniques that can be applied to sets.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython04_sets\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/Qs3BSFZnZSI/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/Qs3BSFZnZSI/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/Qs3BSFZnZSI/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/Qs3BSFZnZSI/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/Qs3BSFZnZSI/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Tutorial",
                    "Programming"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Sets in Python - Advanced Python 04 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, we will be learning about Sets in Python. A Set is a collection data type that is unordered and mutable, but unlike lists or tuples it does not allow duplicate elements. We will go over how you can use them and some advanced techniques that can be applied to sets.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython04_sets\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "530",
                "likeCount": "15",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "0",
                "duration": "PT16M19S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            },
            "LTXnQdrwyrw": {
                "publishedAt": "2019-05-26T16:01:16.000Z",
                "title": "Dictionaries in Python - Advanced Python 03 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial we will be learning about Dictionaries in Python. A Dictionary is a collection data type that is unordered and mutable. It consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value. We will go over how you can use them and some advanced techniques that can be applied to dictionaries.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython03_dict\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/LTXnQdrwyrw/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/LTXnQdrwyrw/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/LTXnQdrwyrw/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/LTXnQdrwyrw/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/LTXnQdrwyrw/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Tutorial",
                    "Programming"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Dictionaries in Python - Advanced Python 03 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial we will be learning about Dictionaries in Python. A Dictionary is a collection data type that is unordered and mutable. It consists of a collection of key-value pairs. Each key-value pair maps the key to its associated value. We will go over how you can use them and some advanced techniques that can be applied to dictionaries.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython03_dict\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "783",
                "likeCount": "22",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "2",
                "duration": "PT13M5S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Technology",
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)"
                ]
            },
            "Kes8YRV73Io": {
                "publishedAt": "2019-05-26T13:05:05.000Z",
                "title": "Tuples in Python - Advanced Python 02 - Programming Tutorial",
                "channelId": "UCbXgNpp0jedKWcQiULLbDTA",
                "description": "In this Python Advanced Tutorial, we will be learning about Tuples in Python. A Tuple is a collection data type that is ordered and immutable. It is similar to a List with the main difference that a Tuple cannot be changed after its creation. A Tuple is often used for objects that belong together. We will go over how you can use them and some advanced techniques that can be applied to Tuples.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython02_tuples\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python",
                "thumbnails": {
                    "default": {
                        "url": "https://i.ytimg.com/vi/Kes8YRV73Io/default.jpg",
                        "width": 120,
                        "height": 90
                    },
                    "medium": {
                        "url": "https://i.ytimg.com/vi/Kes8YRV73Io/mqdefault.jpg",
                        "width": 320,
                        "height": 180
                    },
                    "high": {
                        "url": "https://i.ytimg.com/vi/Kes8YRV73Io/hqdefault.jpg",
                        "width": 480,
                        "height": 360
                    },
                    "standard": {
                        "url": "https://i.ytimg.com/vi/Kes8YRV73Io/sddefault.jpg",
                        "width": 640,
                        "height": 480
                    },
                    "maxres": {
                        "url": "https://i.ytimg.com/vi/Kes8YRV73Io/maxresdefault.jpg",
                        "width": 1280,
                        "height": 720
                    }
                },
                "channelTitle": "Python Engineer",
                "tags": [
                    "Python",
                    "Tutorial",
                    "Programming"
                ],
                "categoryId": "27",
                "liveBroadcastContent": "none",
                "localized": {
                    "title": "Tuples in Python - Advanced Python 02 - Programming Tutorial",
                    "description": "In this Python Advanced Tutorial, we will be learning about Tuples in Python. A Tuple is a collection data type that is ordered and immutable. It is similar to a List with the main difference that a Tuple cannot be changed after its creation. A Tuple is often used for objects that belong together. We will go over how you can use them and some advanced techniques that can be applied to Tuples.\n\nA written Tutorial can be found here:\nhttps://www.python-engineer.com/learn/advancedpython02_tuples\n\nYou can find me here:\nWebsite: https://www.python-engineer.com\nTwitter: https://twitter.com/python_engineer\nGitHub: https://github.com/python-engineer\n\n#Python"
                },
                "viewCount": "727",
                "likeCount": "25",
                "dislikeCount": "0",
                "favoriteCount": "0",
                "commentCount": "3",
                "duration": "PT13M31S",
                "dimension": "2d",
                "definition": "hd",
                "caption": "false",
                "licensedContent": false,
                "projection": "rectangular",
                "topicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "relevantTopicIds": [
                    "/m/019_rr",
                    "/m/07c1v"
                ],
                "topicCategories": [
                    "https://en.wikipedia.org/wiki/Lifestyle_(sociology)",
                    "https://en.wikipedia.org/wiki/Technology"
                ]
            }
        }
    }
}